Important Point related quote

addToCartGust

remove quote_id & cart while logout
remove quote_id & cart after checkout
while login sent quote_id if exists
add product to cart sent quote_id if exists otherwise sent it to null


DONE
$app->post('/login', function(){ $GLOBALS['apiObj']->loginUser();});
$app->post('/createuser', function(){ $GLOBALS['apiObj']->createUser();});
$app->post('/forgotpassword', function(){ $GLOBALS['apiObj']->forgotpasswordUser();});
$app->post('/changepassword', function(){ $GLOBALS['apiObj']->changepasswordUser();});
$app->post('/editprofile', function(){ $GLOBALS['apiObj']->editprofileUser();});
$app->post('/addaddress', function(){ $GLOBALS['apiObj']->addaddressUser();});
$app->post('/editaddress', function(){ $GLOBALS['apiObj']->editaddressUser();});
$app->post('/checkout', function(){ $GLOBALS['apiObj']->checkoutOrder();});
$app->post('/addtocartgust', function(){ $GLOBALS['apiObj']->addtocartgustOrder();});

PENDING
$app->post('/fbregister', function(){ $GLOBALS['apiObj']->fbRegisterUser();});
$app->post('/deleteitem', function(){ $GLOBALS['apiObj']->deleteitemOrder();});
$app->post('/success', function(){ $GLOBALS['apiObj']->successPayment();});
$app->post('/fail', function(){ $GLOBALS['apiObj']->failPayment();});

NOT IN USE
$app->post('/addtocart', function(){te $GLOBALS['apiObj']->addtocartOrder();});
$app->post('/updatecart', function(){ $GLOBALS['apiObj']->updatecartOrder();});

3*** Header Section ***
5*** Validation ***
4*** Loader ****
2*** Deals/Offer Image"
1*** Create Address: fname + lname using profile ***
6*** Cart +1 without quote id then with quote id but always +1 ***

<!-- Start Loader Popup -->
	<div data-ng-show="displayLoader" class="popupcontainerloader popcontainerwid" data-ng-include="'apps/quotes/views/popup/loader.html'" style="position:fixed;"></div>
	<div data-ng-show="displayLoader" class="black_shade"></div>
	<!-- End Loader Popup -->

Airtel 4G: TNtmJLHnAt

http://staging.grocermax.com/webservice/new_services/checkout?userid=13815&quote_id=225&shipping=%7B%22customer_address_id%22%3A%229103%22%2C%22created_at%22%3A%222015-09-26+19%3A04%3A09%22%2C%22updated_at%22%3A%222015-09-27+12%3A47%3A28%22%2C%22city%22%3A%22Gurgaon%22%2C%22country_id%22%3A%22IN%22%2C%22firstname%22%3A%22Ansh%22%2C%22lastname%22%3A%22Katiyar%22%2C%22postcode%22%3A%22122002%22%2C%22region%22%3A%22Haryana%22%2C%22street%22%3A%22Sanjay+Gram%22%2C%22telephone%22%3A%229958066876%22%2C%22is_default_billing%22%3Afalse%2C%22is_default_shipping%22%3Atrue%2C%22%24%24hashKey%22%3A1187%7D&billing=%7B%22customer_address_id%22%3A%229103%22%2C%22created_at%22%3A%222015-09-26+19%3A04%3A09%22%2C%22updated_at%22%3A%222015-09-27+12%3A47%3A28%22%2C%22city%22%3A%22Gurgaon%22%2C%22country_id%22%3A%22IN%22%2C%22firstname%22%3A%22Ansh%22%2C%22lastname%22%3A%22Katiyar%22%2C%22postcode%22%3A%22122002%22%2C%22region%22%3A%22Haryana%22%2C%22street%22%3A%22Sanjay+Gram%22%2C%22telephone%22%3A%229958066876%22%2C%22is_default_billing%22%3Afalse%2C%22is_default_shipping%22%3Atrue%2C%22%24%24hashKey%22%3A1187%7D&payment_method=paytm_cc&shipping_method=tablerate_bestway&timeslot=08%3A00+AM+-+11%3A00+AM&date=2015-09-28

http://dev.grocermax.com/webservice/new_services/checkout?


shipping={"addressline2":"","default_billing":"0","lname":"yadav","addressline1":"address","country_id":"IN","postcode":"213456","telephone":"9999999999","default_shipping":"0","fname":"Abhi","city":"Gurgaon"}

billing={"addressline2":"","default_billing":"0","lname":"yadav","addressline1":"5+nathupur+dlf+phase+3","country_id":"IN","postcode":"247001","telephone":"9999999999","default_shipping":"0","fname":"Abhi","city":"Gurgaon"}

userid=9661
quote_id=136
timeslot=07:30 PM - 10:00 PM
date=2015-09-21
payment_method=paytm_cc
shipping_method=tablerate_bestway


http://dev.grocermax.com/webservice/new_services/checkout?

userid=323&quote_id=###&shipping={JSON Data}&billing={JSON Data}&payment_method=&shipping_method=tablerate_bestway&timeslot=&date=

home page on count offer in category
http://dev.grocermax.com/webservice/new_services/shopbycategory

This api use click on offer link home page  then show deals page
http://dev.grocermax.com/webservice/new_services/offerbydealtype?cat_id=?

all one level other 2 level

Shop by deals
http://dev.grocermax.com/webservice/new_services/shopbydealtype

need to make a seperate route for this: and display all deals

when user will click on shop by deal
http://dev.grocermax.com/webservice/new_services/dealsbydealtype?deal_type_id=321

1. City Selection
	2 hrs

2. Registration with OTP
	2 hrs

3. Category (need to remove on level + last level category listing in blue bar)
	For Example:
		Main Catergory (staples)
			Sub Category (Oil Ghee)
				Sub Sub Category (Cooking Oil)
					now Sub Sub Sub category need to display in blue bar
					dry fruit is one exceptinoal case

	8 hrs

4. Checkout Flow
	8 hrs

5. Cart Add/Update/Delete
	4 hrs

6. Order History Details Page
	1 hrs

7. Category image (required)
	2 hrs

8. Hot Offers & promotions
	8 hrs

9 .Social Login
	4 hrs

10. Appropriate Header Section Listing
	4 hrs

11. Validations & Error message throughout site
	6 hrs

12. Search Functionality
	4 hrs

13. Integartion Pending work
	8 hrs

Approx 60 hrs

Checkout landing page
Register + OTP
Login
 	then redirect it to shipping address page

***** Sample Product JSON Object *****
http://dev.grocermax.com/webservice/new_services/addaddress?userid=323&fname=Binit&lname=Katiyar&addressline1=Gurgaon&addressline2=B-45&city=Gurgaon&state=NCR&pin=122001&countrycode=IN&phone=09540955646&default_billing=1&default_shipping=1

http://dev.grocermax.com/webservice/new_services/deleteitem?userid=5138&productid=[15062,10139]"&quote_id=15887&updateid=[{"productid":"15907","quantity":2},{"productid":"10129","quantity":2}]

Screen1/Screen2/Screen3/Screen4 (home + menu category)
	Home/User/Cart/More
Screen5: (sub category listing)
	Catergory/Cart/More
Screen6: (Offer category)
	Offername/Cart/More
Screen7: (product lisitng)
	Caterogy/Search/Cart
Screen8: Prodcut description
	Prod Desc/Search/Cart
Screen9: 


angular.forEach(data, function(value, key){
    if(dateList.length && dateList.indexOf(value.Date) >= 0) {                        
        //$scope.deliverySlots[value.Date].push(buildDeliverySlotObject(value));
    } else {
        dateList.push(value.Date);
        $scope.deliverySlots.push({date: value.Date});
        //$scope.deliverySlots[value.Date] = [];                        
        //$scope.deliverySlots[value.Date].push(buildDeliverySlotObject(value));
    }
});

/*buildCartObject = function(product) {
    return {
        "productid": parseInt(product.productid, 10),
        "quantity": 1
    };
};*/

/*buildAddProductObject = function(product) {
    var products = [],
        cartObject = buildCartObject(product);
        
    products.push(cartObject);                
    return products;
};*/

/*addProductToJStorage = function(product) {
    var cartItems = [];
    cartItems.push(buildCartObject(product));
    utility.setJStorageKey("cartItems", cartItems, 1);                
};*/            

/*updateProductToJStorage = function(product) {
    var cartItems = utility.getJStorageKey("cartItems"),
        isOperated = false,
        findKey = null,
        obj = {};

    if(cartItems.length) {
        angular.forEach(cartItems, function(value, key) {
            if(parseInt(product.productid, 10) == parseInt(value.productid, 10)) {
                value.quantity = parseInt(value.quantity, 10) + 1;
                isOperated = true;
            }
        });
        if(!isOperated) {
            var cartObject = buildCartObject(product);
            cartItems.push(cartObject);  
            isOperated = true;
        }
    } else {
        var cartObject = buildCartObject(product);
        cartItems.push(cartObject);
    }
    
    utility.setJStorageKey("cartItems", cartItems, 1);
    getCartDetails();
};*/

/*removeProductFromCart = function(product) {
    var cartItems = utility.getJStorageKey("cartItems"),
        isOperated = false,
        obj = {};

    angular.forEach(cartItems, function(value, key){
        if(parseInt(product.productid, 10) == parseInt(value.productid, 10)) {
            if(value.quantity > 1) {
                if(!isOperated) {
                    value.quantity = parseInt(value.quantity, 10) - 1;
                    isOperated = true;
                } 
            } else {
                if(!isOperated) {
                    cartItems.splice(key, 1);
                    isOperated = true;
                }
            }                      
        }
    });
    utility.setJStorageKey("cartItems", cartItems, 1);
    getCartDetails();
};*/

/*$scope.addProduct = function(product) {
    if(angular.isDefined(utility.getJStorageKey("cartItems"))
        && utility.getJStorageKey("cartItems")) {
         updateProductToJStorage(product);
    } else {
        addProductToJStorage(product);
        getCartDetails();
    }
};*/

/*$scope.removeProduct = function(product) {                
    if(angular.isDefined(utility.getJStorageKey("cartItems"))
        && utility.getJStorageKey("cartItems")) {
        removeProductFromCart(product);
    }
};*/

/*$scope.addProductWrapper = function(product) {
    product.productid = product.product_id;
    $scope.addProduct(product);
};*/

/*$scope.removeProductWrapper = function(product) {
    product.productid = product.product_id;
    $scope.removeProduct(product);
};*/

/*$scope.guestAddProduct = function() {
    if(angular.isDefined(utility.getJStorageKey("cartItems")) 
        && utility.getJStorageKey("cartItems")) {                    
        productService.cartAddProduct(utility.getJStorageKey("cartItems"))
            .then(function(data){
                if(data.flag == 1 || data.flag == "1"){
                    utility.setJStorageKey("quoteId", data.QuoteId, 1);
                    console.log("cart detail redirection");
                    $location.url("cart" + "/" + data.QuoteId);
                }                            
            });
    } else {
        console.log("do nothing...");
    }
};*/